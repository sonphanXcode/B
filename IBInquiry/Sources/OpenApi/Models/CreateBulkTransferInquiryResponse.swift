//
// CreateBulkTransferInquiryResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import IBCommon
import IBFoundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Data */
public struct CreateBulkTransferInquiryResponse: Codable, Responseable, JSONEncodable, Hashable {

    public var inquiryReson: String?
    public var inquiryDesc: String?
    public var totalRow: String?
    public var amount: Double?
    public var ccy: String?
    public var debitAccNo: String?
    public var debitAccName: String?
    public var id: String?
    public var prodCode: String?
    public var txnType: String?
    public var status: String?
    public var effDate: String?
    public var remark: String?

    public init(inquiryReson: String? = nil, inquiryDesc: String? = nil, totalRow: String? = nil, amount: Double? = nil, ccy: String? = nil, debitAccNo: String? = nil, debitAccName: String? = nil, id: String? = nil, prodCode: String? = nil, txnType: String? = nil, status: String? = nil, effDate: String? = nil, remark: String? = nil) {
        self.inquiryReson = inquiryReson
        self.inquiryDesc = inquiryDesc
        self.totalRow = totalRow
        self.amount = amount
        self.ccy = ccy
        self.debitAccNo = debitAccNo
        self.debitAccName = debitAccName
        self.id = id
        self.prodCode = prodCode
        self.txnType = txnType
        self.status = status
        self.effDate = effDate
        self.remark = remark
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case inquiryReson
        case inquiryDesc
        case totalRow
        case amount
        case ccy
        case debitAccNo
        case debitAccName
        case id
        case prodCode
        case txnType
        case status
        case effDate
        case remark
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        inquiryReson = container.decodeIfPresent(.inquiryReson)
        inquiryDesc = container.decodeIfPresent(.inquiryDesc)
        totalRow = container.decodeIfPresent(.totalRow)
        amount = container.decodeIfPresent(.amount)
        ccy = container.decodeIfPresent(.ccy)
        debitAccNo = container.decodeIfPresent(.debitAccNo)
        debitAccName = container.decodeIfPresent(.debitAccName)
        id = container.decodeIfPresent(.id)
        prodCode = container.decodeIfPresent(.prodCode)
        txnType = container.decodeIfPresent(.txnType)
        status = container.decodeIfPresent(.status)
        effDate = container.decodeIfPresent(.effDate)
        remark = container.decodeIfPresent(.remark)
       
    }
    
}

extension CreateBulkTransferInquiryResponse: Emptyable {
    public static var empty: CreateBulkTransferInquiryResponse {
        return .init(inquiryReson: nil, inquiryDesc: nil, totalRow: nil, amount: nil, ccy: nil, debitAccNo: nil, debitAccName: nil, id: nil, prodCode: nil, txnType: nil, status: nil, effDate: nil, remark: nil)
    }
}
