//
// ResponseError.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import IBCommon
import IBFoundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Addition Error List */
public struct ResponseError: Codable, Responseable, JSONEncodable, Hashable {

    public var errorCode: String?
    public var errorDesc: String?
    public var refVal: AnyCodable?

    public init(errorCode: String? = nil, errorDesc: String? = nil, refVal: AnyCodable? = nil) {
        self.errorCode = errorCode
        self.errorDesc = errorDesc
        self.refVal = refVal
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case errorCode
        case errorDesc
        case refVal
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        errorCode = container.decodeIfPresent(.errorCode)
        errorDesc = container.decodeIfPresent(.errorDesc)
        refVal = container.decodeIfPresent(.refVal)
       
    }
    
}

extension ResponseError: Emptyable {
    public static var empty: ResponseError {
        return .init(errorCode: nil, errorDesc: nil, refVal: nil)
    }
}
