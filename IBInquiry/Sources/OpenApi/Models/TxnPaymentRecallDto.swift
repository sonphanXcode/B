//
// TxnPaymentRecallDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import IBCommon
import IBFoundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TxnPaymentRecallDto: Codable, Responseable, JSONEncodable, Hashable {

    public var id: String?
    public var txnId: String?
    public var totalRow: Int64?
    public var totalAmountText: String?
    public var amount: Double?
    public var ccy: String?

    public init(id: String? = nil, txnId: String? = nil, totalRow: Int64? = nil, totalAmountText: String? = nil, amount: Double? = nil, ccy: String? = nil) {
        self.id = id
        self.txnId = txnId
        self.totalRow = totalRow
        self.totalAmountText = totalAmountText
        self.amount = amount
        self.ccy = ccy
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case txnId
        case totalRow
        case totalAmountText
        case amount
        case ccy
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        id = container.decodeIfPresent(.id)
        txnId = container.decodeIfPresent(.txnId)
        totalRow = container.decodeIfPresent(.totalRow)
        totalAmountText = container.decodeIfPresent(.totalAmountText)
        amount = container.decodeIfPresent(.amount)
        ccy = container.decodeIfPresent(.ccy)
       
    }
    
}

extension TxnPaymentRecallDto: Emptyable {
    public static var empty: TxnPaymentRecallDto {
        return .init(id: nil, txnId: nil, totalRow: nil, totalAmountText: nil, amount: nil, ccy: nil)
    }
}
