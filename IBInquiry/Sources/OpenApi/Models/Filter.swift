//
// Filter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import IBCommon
import IBFoundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Filter: Codable, Responseable, JSONEncodable, Hashable {

    /** ct/ eq/ neq/ gt/ gte/ lt/ lte */
    public var _operator: String?
    public var field: String?
    public var value: String?

    public init(_operator: String? = nil, field: String? = nil, value: String? = nil) {
        self._operator = _operator
        self.field = field
        self.value = value
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _operator = "operator"
        case field
        case value
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        _operator = container.decodeIfPresent(._operator)
        field = container.decodeIfPresent(.field)
        value = container.decodeIfPresent(.value)
       
    }
    
}

extension Filter: Emptyable {
    public static var empty: Filter {
        return .init(_operator: nil, field: nil, value: nil)
    }
}
