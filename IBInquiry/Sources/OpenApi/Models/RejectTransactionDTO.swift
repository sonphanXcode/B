//
// RejectTransactionDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import IBCommon
import IBFoundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct RejectTransactionDTO: Codable, Responseable, JSONEncodable, Hashable {

    public var txnIds: [String]
    public var rejectReason: String?

    public init(txnIds: [String], rejectReason: String? = nil) {
        self.txnIds = txnIds
        self.rejectReason = rejectReason
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case txnIds
        case rejectReason
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        txnIds = container.decodeIfPresent(.txnIds) ?? .empty
        rejectReason = container.decodeIfPresent(.rejectReason)
       
    }
    
}

extension RejectTransactionDTO: Emptyable {
    public static var empty: RejectTransactionDTO {
        return .init(txnIds: .empty, rejectReason: nil)
    }
}
